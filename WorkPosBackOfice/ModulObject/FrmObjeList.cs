using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;using System.Windows.Forms;
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Grid;
using WorkPosBackOfice.ModulProduct;
using WorkPosBLL.Concrete;
using WorkPosDb.EntityFrameWork;
using System.Data.Entity;

namespace WorkPosBackOfice.ModulObject
{
    public partial class FrmObjeList : Form
    {
        private ModelObjects modelObjects;
        public object secilenObje;
        private ModelObjects.ObjectEnum objectEnum;
        private int iliskiliObjeId = 0;

        SetupBll<PRODUCT_BRANDS> _setupBllBrands=new SetupBll<PRODUCT_BRANDS>(); 
        public FrmObjeList(ModelObjects.ObjectEnum objectEnum, int iliskiliObjeId)
        {
            InitializeComponent();
            this.objectEnum = objectEnum;
            iliskiliObjeId = iliskiliObjeId;
            // this.gridView1.OptionsView.NewItemRowPosition = NewItemRowPosition.Bottom;
            this.Load += Form1_Load;


            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
         //   WorkPosDb.EntityFrameWork.WorkPosDbContext dbContext = new WorkPosDb.EntityFrameWork.WorkPosDbContext();
            // Call the Load method to get the data for the given DbSet from the database.
         //   dbContext.PRODUCT_BRANDS.Load();
            // This line of code is generated by Data Source Configuration Wizard
         //   bindingSource1.DataSource = dbContext.PRODUCT_BRANDS.Local.ToBindingList();
          //  gridControl1.DataSourceChanged += gridControl1_DataSourceChanged;
            initData();

        }

        void gridControl1_DataSourceChanged(object sender, EventArgs e)
        {
            gridControl1.MainView.PopulateColumns();
            (gridControl1.MainView as GridView).BestFitColumns();
        }
        private void initData()
        {
      /*      var context = new WorkPosDbContext();
          BindingSource bi = new BindingSource();
            context.COMPANY.Load();
            bi.DataSource = context.COMPANY.Local.ToBindingList();
            gridControl1.DataSource = bi;


            gridView1.Columns["gridColumsId"].Caption = "Id";
            gridView1.Columns["gridColumsValue"].Caption = "Marka";
            */

            gridControl1.DataSource = _setupBllBrands.GetAllToBindingList();

            

        }
        private void Form1_Load(object sender, EventArgs e)
        {
     
         /*   modelObjects = new ModelObjects("");
            modelObjects.ObjeIslemler(objectEnum, ModelObjects.ObjectIslem.Listele, null, iliskiliObjeId, gridControl1);
          * */
        }

       
        private void gridView1_RowUpdated(object sender, DevExpress.XtraGrid.Views.Base.RowObjectEventArgs e)
        {

            if (!(gridView1.PostEditor() && gridView1.UpdateCurrentRow()))
                return;

            var view = sender as GridView;
            Object obj;
            if (e.RowHandle != GridControl.NewItemRowHandle)
                obj = view.GetRow(view.FocusedRowHandle);
            else
            {
                obj = view.GetRow(view.FocusedRowHandle);
               // obj = e.Row as DataRowView;
                //int i = Convert.ToInt32(((DataRowView)obj)["Id"]);
            }

            if (obj == null)
                return;

            if (view.IsNewItemRow(e.RowHandle))
            {
              
                _setupBllBrands.Add((PRODUCT_BRANDS)obj);
            }
            else
            {
                _setupBllBrands.Update((PRODUCT_BRANDS)obj);
            }
           // modelObjects.ObjeIslemler(objectEnum, ModelObjects.ObjectIslem.Listele, obj, iliskiliObjeId, gridControl1);

         
            //kaynak https://www.devexpress.com/Support/Center/Question/Details/T186471
        }
       
        private void btnMarkaSec_Click(object sender, EventArgs e)
        {
            if (gridView1.GetFocusedRow() != null)
                secilenObje = gridView1.GetFocusedRow();
            else
            {
               
                return;
            }
        }

      

      

        private void bindingSource1_CurrentChanged(object sender, EventArgs e)
        {

        }

        
       

    }
}
